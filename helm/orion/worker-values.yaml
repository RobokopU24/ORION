# Values for running ORION worker on Sterling at RENCI

replicaCount: 1

orion:
  graphID: "Example_Graph"
  graphSpec: "example-graph-spec.yaml"
  # useLocalGraphSpec true if the graphSpec is a file in the codebase (mainly for testing), false if a remote URL
  useLocalGraphSpec: true
  buildMode: true
  image:
    repository: ghcr.io/robokopu24/orion
    pullPolicy: Always
    tag: litcoin-pipeline-worker-test
  graphsVolume:
    use_nfs: false
    nfs_server: na-projects.edc.renci.org
    nfs_path: /stars/Data_services
    nfs_mount_subpath: biolink3/graphs/
  sourcesVolume:
    use_nfs: false
    nfs_server: na-projects.edc.renci.org
    nfs_path: /stars/Data_services
    nfs_mount_subpath: biolink3/storage/
  extraVolume:
    use_extra_volume: false
    nfs_server: na-projects.edc.renci.org
    nfs_path: /stars/Data_services
    nfs_mount_subpath: sterling/
  neo4jScratchVolume:
    size: 8Gi
  resources:
    limits:
      cpu: "1"
      memory: 10Gi
      ephemeral-storage: 2Gi
    requests:
      cpu: "1"
      memory: 10Gi
      ephemeral-storage: 1Gi
  securityContext:
    runAsUser: 30000
    runAsGroup: 1000
  normalization:
    nodeNormEndpoint: https://nodenormalization-sri.renci.org/
    edgeNormEndpoint: https://bl-lookup-sri.renci.org/
    nameResolverEndpoint: https://name-resolution-sri.renci.org/
    sapbertEndpoint: https://sap-qdrant.apps.renci.org/
    bl_version: 4.2.6-rc2
  outputURL: https://stars.renci.org/var/plater/bl-4.2.1/

# Worker-specific settings
worker:
  enabled: true  # enable running ORION as a celery worker
  celery:
    brokerUrl: "redis://redis:6379/0"
    resultBackend: "redis://redis:6379/0"
